library(ChIPpeakAnno)
library(biomaRt)
require(TxDb.Hsapiens.UCSC.hg38.knownGene)
txdb <- annoGR(TxDb.Hsapiens.UCSC.hg38.knownGene, feature="gene")

# import peaks
peaks <- list.files(".",pattern="_peaks.bed")
for(x in peaks){assign(strsplit(x,"_peaks.bed")[[1]][1], BED2RangedData(read.delim(x, header=F), FALSE))}

### features 
TSS = getAnnotation(useMart(biomart="ensembl", dataset="hsapiens_gene_ensembl"), featureType="TSS")

#featureType accepts one of the feature types (case sensitive): "TSS", "miRNA", "Exon", "5utr", "3utr", "ExonPlusUtr", “transcript”
annotatedPeak <- annotatePeakInBatch(peaks, AnnotationData=txdb)


### overlap ###

ol <- findOverlapsOfPeaks(peaks,connectedPeaks="merge")

write.table(as.data.frame(ol$peaklist[[3]])[,c(1:3)],quote=F,row.names=F,col.names=F,file="empty_wt_lv5_r3_ebf_empty_wt_r3_znf.bed",sep="\t")

### makevenn ###

library(gplots)

ol_venn <- list()
ol_venn$st_lt <- c(unname(unlist(c(ol_st_lt$peaklist$st_lt$peakNames))),unname(sapply(ol_st_lt$mergedPeaks$peakNames,function(x) paste(x,collapse="_"))))
ol_st_lt_venn$st_lt_1 <- c(unname(unlist(c(ol_st_lt$peaklist$st_plus_lt_1$peakNames))),unname(sapply(ol_st_lt$mergedPeaks$peakNames,function(x) paste(x,collapse="_"))))
grid.draw(venn.diagram(ol_venn, filename=NULL, alpha=c(0.5,0.5), cex = 1, fill=c("green","red"), main="lt", cat.dist=0.05, scaled=T, main.fontfamily="sans",cat.fontfamily="sans",fontfamily="sans"))

