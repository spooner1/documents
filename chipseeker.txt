library(ChIPseeker)
library(ChIPpeakAnno)
library(gplots)
require(TxDb.Hsapiens.UCSC.hg38.knownGene)
#require(TxDb.Mmusculus.UCSC.mm10.knownGene)
#require(clusterProfiler)
txdb <- TxDb.Hsapiens.UCSC.hg38.knownGene
#txdb <- TxDb.Mmusculus.UCSC.mm10.knownGene
annoDb <- "org.Hs.eg.db"
#annoDb <- "org.Mm.eg.db"
promoter <- getPromoters(TxDb=txdb, upstream=3000, downstream=3000)

dir.create("./plots")
dir.create("./overlap_peaks")
dir.create("./overlap_summits")
dir.create("./annotated_peaks")

peaks <- as.list(list.files("./",pattern="peaks.bed"))
summits <- as.list(list.files("./", pattern="summits.bed"))

#for(x in summits){y=unlist(strsplit(x,"\\."[[1]][1])); pdf(paste(y,"genome_cov.pdf",sep="_")); plot(covplot(readPeakFile(x),title=paste("ChIP Peaks over Chromosomes",y), weightCol="V5")); dev.off()}; dev.off()

tagMatrixList <- list()
for(x in peaks){tagMatrixList[[strsplit(x, "\\.")[[1]][1]]] <- getTagMatrix(x, windows=promoter)}

tiff("plots/TSS_Heatmaps.tiff", title="TSS_Heatmaps")
tagHeatmap(tagMatrixList, xlim=c(-3000, 3000), color=NULL)
dev.off()

peakslist <- list()
for(x in peaks){peakslist[[strsplit(x, "\\.bed")[[1]][1]]] <- annotatePeak(x, tssRegion=c(-3000, 1000),TxDb=txdb, annoDb=annoDb,verbose=F)}

summitslist <- list()
for(x in summits){summitslist[[paste0(strsplit(x, "_summits\\.")[[1]][1],"_peaks")]] <- annotatePeak(x, tssRegion=c(-3000, 1000),TxDb=txdb, annoDb=annoDb,verbose=F)}

pdf("plots/Feature_Distribution.pdf", title="Feature_Distribution")
plotAnnoBar(summitslist)
dev.off()

pdf("plots/Distribution_rel_to_TSS.pdf", title="Distribution_rel_to_TSS")
plotDistToTSS(peakslist)
dev.off()

#genes = lapply(peakslist, function(i) as.data.frame(i)$geneId); 
#compMF <- compareCluster(geneCluster=genes, fun="enrichKEGG", pvalueCutoff=0.05, pAdjustMethod="BH")
#pdf("KEGG_Enrichment.pdf", title="KEGG_Enrichment",width=10,height=15)
#plot(compMF, showCategory = 20, title = "KEGG Enrichment")
#dev.off()

#tagMatrixList <- list()
#for(x in summits){tagMatrixList[[strsplit(x, "\\.")[[1]][1]]] <- getTagMatrix(x, windows=promoter)}

pdf("plots/Peaks_TSS_3000bp.pdf", title="Peaks_TSS_3000bp")
plotAvgProf(tagMatrixList, xlim=c(-3000, 3000), conf=0.95,resample=100, facet="row")
dev.off()


peaks <- list()
for(x in names(peakslist)){
peak <- as.data.frame(as.GRanges(peakslist[[x]]))[,-5]
names(peak)[5:6] <- c("name","score")
genes[[x]] <- unique(peak[grepl("Promoter",peak$annotation),]$SYMBOL)
peak <- peak[order(peak$score,decreasing=T),]
peaks[[x]] <- peak
write.table(peak,file=paste0("annotated_peaks/",x,"_annotated.tsv"),sep="\t",quote=F,row.names=F)}

summits <- list()
for(x in names(summitslist)){
summit <- as.data.frame(as.GRanges(summitslist[[x]]))[,c(1:3,6:7)]
names(summit)[4:5] <- c("name","score")
summits[[x]] <- summit}


peaks_anno <- list.files(".",pattern="_peaks.bed")
for(x in peaks_anno){assign(strsplit(x,".bed")[[1]][1], BED2RangedData(read.delim(x, header=F), FALSE))}
ol <- suppressWarnings(findOverlapsOfPeaks(sapply(names(peaks),get),connectedPeaks="merge"))
remove(peaks_anno)

###   four chips venn   ###

v <- vector(); for(x in list(c(1),c(2),c(3),c(4),c(1,2),c(1,3),c(1,4),c(2,3),c(2,4),c(3,4),c(1,2,3),c(1,2,4),c(1,3,4),c(2,3,4),c(1,2,3,4))){if(length(x) > 1){v <- c(v,sum(ol$venn_cnt[rowSums(ol$venn_cnt[,x] == 1) == length(x),5]))};if(length(x) == 1){v <- c(v,sum(ol$venn_cnt[ol$venn_cnt[,x] == 1,5]))}};v
venn.plot <- draw.quad.venn(area1 = v[1],area2 = v[2],area3 = v[3],area4 = v[4],n12 = v[5],n13 = v[6],n14 = v[7],n23 = v[8],n24 = v[9],n34 = v[10],n123 = v[11],n124 = v[12],n134 = v[13],n234 = v[14],n1234 = v[15],category = sub("_peaks","",names(peaks)),fill = c("orange", "red", "green", "blue"),fontfamily = 'sans', cat.fontfamily = 'sans', main="", margin=0.1, main.cex=3, ind=F)

pdf("plots/vennplot.pdf")
grid.draw(venn.plot)
dev.off()

for(y in names(ol$peaklist)){tmp_peaks <- data.frame();tmp_summits <- data.frame();for(x in unlist(strsplit(y,"///"))){tmp_names <- sub(paste0(x,"__"),"",as.vector(unlist(ol$peaklist[[y]]$peakNames)[grepl(paste0(x,"__MACS"),unlist(ol$peaklist[[y]]$peakNames))]));tmp_peaks <- rbind(tmp_peaks,subset(peaks[[x]], name %in% tmp_names));tmp_summits <- rbind(tmp_summits,subset(summits[[x]], name %in% tmp_names))};write.table(tmp_peaks,file=paste0("overlap_peaks/",gsub("///","+",y),"_annotated.tsv"),sep="\t",quote=F,row.names=F);write.table(tmp_summits,file=paste0("overlap_summits/",gsub("///","+",y),".bed"),sep="\t",quote=F,row.names=F,col.names=F)}



